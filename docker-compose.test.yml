version: "3.8"

services:
  # Test database
  postgres-test:
    image: timescale/timescaledb:latest-pg15
    environment:
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_pass
      POSTGRES_DB: test_detektor
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test_user"]
      interval: 5s
      timeout: 5s
      retries: 5
    tmpfs:
      - /var/lib/postgresql/data

  # Test Redis
  redis-test:
    image: redis:7-alpine
    ports:
      - "6380:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Test observability stack
  jaeger-test:
    image: jaegertracing/all-in-one:latest
    environment:
      COLLECTOR_OTLP_ENABLED: true
    ports:
      - "16687:16686" # UI
      - "4318:4317" # OTLP gRPC
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:14269/"]
      interval: 5s
      timeout: 5s
      retries: 5

  prometheus-test:
    image: prom/prometheus:latest
    ports:
      - "9091:9090"
    volumes:
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
      - "--web.enable-lifecycle"
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:9090/-/healthy"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Example frame processor for E2E tests
  frame-processor-test:
    build:
      context: .
      dockerfile: Dockerfile.test
    environment:
      - SERVICE_NAME=frame-processor
      - SERVICE_PORT=8081
      - ENVIRONMENT=test
      - LOG_LEVEL=INFO
      - OTLP_ENDPOINT=http://jaeger-test:4317
      - DB_HOST=postgres-test
      - DB_PORT=5432
      - DB_NAME=test_detektor
      - DB_USER=test_user
      - DB_PASS=test_pass
      - REDIS_HOST=redis-test
      - REDIS_PORT=6379
    ports:
      - "8081:8081"
    depends_on:
      postgres-test:
        condition: service_healthy
      redis-test:
        condition: service_healthy
      jaeger-test:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 5s
      timeout: 5s
      retries: 10

networks:
  default:
    name: detektor-test
