name: Frame Buffer v2 - Tests

on:
  push:
    paths:
      - 'services/frame-buffer-v2/**'
      - '.github/workflows/frame-buffer-v2-tests.yml'
  pull_request:
    paths:
      - 'services/frame-buffer-v2/**'
      - '.github/workflows/frame-buffer-v2-tests.yml'

defaults:
  run:
    working-directory: services/frame-buffer-v2

jobs:
  test:
    name: Test Frame Buffer v2
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      postgres:
        image: postgres:15-alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: frame_buffer_test
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      jaeger:
        image: jaegertracing/all-in-one:latest
        ports:
          - 16686:16686
          - 4317:4317
          - 4318:4318
        env:
          COLLECTOR_OTLP_ENABLED: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: services/frame-buffer-v2/requirements*.txt

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt
          pip install -r requirements-test.txt

      - name: Run linting
        run: |
          black --check src/ tests/
          isort --check-only src/ tests/
          flake8 src/ tests/

      - name: Run type checking
        run: |
          mypy src/ tests/ || true  # Allow failures initially

      - name: Run tests with coverage
        run: |
          pytest tests/ -v \
            --cov=src \
            --cov-report=term-missing \
            --cov-report=xml \
            --cov-fail-under=80

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./services/frame-buffer-v2/coverage.xml
          flags: frame-buffer-v2
          name: frame-buffer-v2

      - name: Run performance tests
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          pytest tests/performance/ -v -m benchmark

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: services/frame-buffer-v2/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/detektr/frame-buffer:2.0-${{ github.sha }}
            ghcr.io/${{ github.repository_owner }}/detektr/frame-buffer:2.0-latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
