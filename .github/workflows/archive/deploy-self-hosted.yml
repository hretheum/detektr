name: Build and Deploy (Self-hosted)

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: hretheum/bezrobocie-detektor

jobs:
  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        service:
          - example-otel
          - frame-tracking
          - base-template
          - echo-service
          - gpu-demo
          - rtsp-capture
          - frame-buffer
          - telegram-alerts
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/${{ matrix.service }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./services/${{ matrix.service }}/Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            SERVICE_NAME=${{ matrix.service }}
            BUILD_DATE=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
            VCS_REF=${{ github.sha }}

  deploy:
    name: Deploy to Nebula
    needs: build-and-push
    runs-on: [self-hosted, nebula]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout deployment scripts
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            scripts/deploy-local-on-nebula.sh
            docker-compose.yml
            docker-compose.*.yml
            .env
            .env.*
            config/
          sparse-checkout-cone-mode: false

      - name: Deploy to Nebula
        env:
          REGISTRY: ${{ env.REGISTRY }}
          IMAGE_PREFIX: ${{ env.IMAGE_PREFIX }}
          SKIP_HOSTNAME_CHECK: 1
        run: |
          chmod +x scripts/deploy-local-on-nebula.sh
          ./scripts/deploy-local-on-nebula.sh

      - name: Deployment Summary
        if: always()
        run: |
          echo "ðŸš€ Deployment Summary"
          echo "===================="
          echo "Target: ${{ secrets.NEBULA_USER }}@${{ secrets.NEBULA_HOST }}"
          echo "Images deployed:"
          echo "  - ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/example-otel:latest"
          echo "  - ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/frame-tracking:latest"
          echo "  - ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/base-template:latest"
          echo "  - ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/echo-service:latest"
          echo "  - ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/gpu-demo:latest"
          echo "  - ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/rtsp-capture:latest"
          echo "  - ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/frame-buffer:latest"
          echo "  - ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/telegram-alerts:latest"
