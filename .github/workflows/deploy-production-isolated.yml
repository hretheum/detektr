name: Deploy to Production (Isolated)

on:
  workflow_dispatch:
  workflow_call:

env:
  DEPLOY_DIR: /opt/detektor-clean
  WORKSPACE_DIR: /home/github-runner/workspace

jobs:
  deploy:
    name: Deploy to Production
    runs-on: [self-hosted, nebula]
    steps:
      - name: Checkout code to workspace
        uses: actions/checkout@v4
        with:
          path: workspace

      - name: Copy deployment files only
        run: |
          # Clean deployment directory
          sudo rm -rf ${{ env.DEPLOY_DIR }}/docker
          sudo rm -rf ${{ env.DEPLOY_DIR }}/scripts

          # Copy only necessary files
          cp -r workspace/docker ${{ env.DEPLOY_DIR }}/
          cp -r workspace/scripts ${{ env.DEPLOY_DIR }}/

          # Copy .env if exists (should be encrypted)
          if [ -f workspace/.env.sops ]; then
            cp workspace/.env.sops ${{ env.DEPLOY_DIR }}/
          fi

          # Clean workspace after copy
          rm -rf workspace

      - name: Deploy services
        working-directory: ${{ env.DEPLOY_DIR }}
        env:
          SOPS_AGE_KEY_FILE: /home/github-runner/.config/sops/age/keys.txt
        run: |
          # Decrypt secrets if needed
          if [ -f .env.sops ]; then
            sops -d .env.sops > .env
          fi

          # Deploy using docker compose
          docker compose \
            -f docker/base/docker-compose.yml \
            -f docker/base/docker-compose.storage.yml \
            -f docker/base/docker-compose.observability.yml \
            -f docker/environments/production/docker-compose.yml \
            pull

          docker compose \
            -f docker/base/docker-compose.yml \
            -f docker/base/docker-compose.storage.yml \
            -f docker/base/docker-compose.observability.yml \
            -f docker/environments/production/docker-compose.yml \
            up -d --remove-orphans

      - name: Verify deployment
        working-directory: ${{ env.DEPLOY_DIR }}
        run: |
          # Wait for services to start
          sleep 30

          # Check health
          ./scripts/deploy.sh production verify || true

      - name: Clean workspace
        if: always()
        run: |
          # Ensure no source code remains in runner workspace
          rm -rf ${{ github.workspace }}/*
          rm -rf ${{ github.workspace }}/.*
